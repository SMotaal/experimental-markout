{"version":3,"file":"debug.js","sources":["../node_modules/@smotaal.io/markup/packages/matcher/lib/debug.js"],"sourcesContent":["ï»¿// @ts-check\n/// <reference path=\"./types.d.ts\" />\n\n/** @param {Matcher} matcher @param {string} sourceText @param {MatcherDebugOptions} [options] */\nexport const debugMatcher = (matcher, sourceText, options = {}) => (\n  ({timing: options.timing = false} = options),\n  debugMatcher.matches(debugMatcher.matchAll(matcher, sourceText, options), options)\n);\n\n/** @param {Matcher} matcher @param {string} sourceText @param {MatcherDebugOptions} [options] */\ndebugMatcher.matchAll = (matcher, sourceText, options = {}) => {\n  const {timing = false} = options;\n  const stamp = `${(timing === true && `-${Date.now()}`) || timing || ''}`;\n  timing && console.time(`matching${stamp}`);\n  // @ts-ignore\n  // TODO: Find a cleaner way to reference RegExp.prototype[Symbol.matchAll]\n  options.matches = [\n    ...matcher.constructor['matchAll']((options.sourceText = sourceText), (options.matcher = matcher)),\n  ];\n  timing && console.timeEnd(`matching${stamp}`);\n  return options.matches;\n};\n\n/** @param {MatcherMatch[]} matches @param {MatcherDebugOptions} options */\ndebugMatcher.matches = (matches, options = {}) => {\n  const {\n    method = 'log',\n    timing = false,\n    warnings = true,\n    matcher,\n    // @ts-ignore\n    colors = (matcher && matcher.colors) || debugMatcher.colors,\n    logs = [],\n\n    uniqueTypes = matcher &&\n      // @ts-ignore\n      matcher.entities && [...new Set(matcher.entities.filter(entity => typeof entity === 'string'))],\n  } = options;\n  const stamp = `${(timing === true && `-${Date.now()}`) || timing || ''}`;\n\n  timing && console.time(`printing${stamp}`);\n\n  const INITIAL = method === 'render' ? '' : RESET_STYLE;\n\n  const {DELIMITER = 'DELIMITER?', UNKNOWN = 'UNKNOWN?', INSET = 'INSET?'} = /** @type {*} */ (matcher);\n\n  try {\n    let format;\n    let lastIndex = -1;\n    for (const match of matches) {\n      if (!match) continue;\n      format = '';\n      const {0: string, index, identity, entity, capture, meta, input, ...properties} = match;\n      // @ts-ignore\n      let {[DELIMITER]: delimiter, [UNKNOWN]: unknown, [INSET]: inset} = capture;\n      const values = [];\n      // @ts-ignore\n      const delta = (properties.index = index) - (properties.lastIndex = lastIndex);\n      // @ts-ignore\n      const skipped = (properties.skipped = lastIndex > 0 &&\n        delta > 1 && {index, lastIndex, delta, text: input.slice(lastIndex, index) || ''});\n\n      format = '';\n\n      if (skipped && skipped.text.length) {\n        const {text, ...indices} = skipped;\n        const details = CSS.escape(\n          JSON.stringify(indices)\n            .replace(/\"/g, '')\n            .replace(/\\s*\\n\\s*/, ' ')\n            .slice(1, -1),\n        );\n        values.push(\n          // @ts-ignore\n          ...(skipped.lines = text.replace(/^\\n/, '').split(/\\n/)).flatMap((line, index) => [\n            `${INITIAL} color: coral;`,\n            index ? `\\n${SEGMENT_MARGIN}` : `${'skipped'.padStart(SEGMENT_MARGIN.length - 1)}\\u{00A0}`,\n            `${INITIAL} border: 0 solid coral; border-left-width: 1.5px; border-right-width: 1.5px; color: coral;  background: #FFFAFA; --details: \"${details}\";`,\n            line,\n          ]),\n          INITIAL,\n        ),\n          // @ts-ignore\n          (format += `${`%c%s%c%s`.repeat(skipped.lines.length)}%c\\0`);\n\n        logs.push([method, [format, ...values.splice(0, values.length)]]);\n        format = '';\n      }\n\n      // @ts-ignore\n      unknown !== undefined && (properties.unknown = unknown);\n      // @ts-ignore\n      delimiter !== undefined && (properties.delimiter = delimiter);\n\n      // @ts-ignore\n      const overlap = (properties.overlap = (delta < 0 && string.slice(0, 1 - delta)) || '');\n      overlap && warnings && logs.push(['warn', ['overlap:', {overlap, delta, match, index, lastIndex}]]);\n\n      const color = !identity\n        ? //\n          // @ts-ignore\n          colors.unknown || COLORS.unknown\n        : identity in colors\n        ? colors[identity]\n        : colors[((uniqueTypes && identity && uniqueTypes.indexOf(identity)) || entity || 0) % colors.length];\n\n      const details = CSS.escape(\n        JSON.stringify({properties, capture}, null, 1)\n          .replace(/^(\\s*)\"(.*?)\":/gm, '$1$2:')\n          // .replace(/\\s*\\n\\s*/g, ' ')\n          .slice(2, -2),\n      );\n\n      {\n        let lines, lineFormat;\n        if (inset) {\n          const start = (inset && inset.length) || 0;\n          const end = (delimiter && -delimiter.length) || undefined;\n          lines = string.slice(start, end).split(`\\n${inset || ''}`);\n          inset = (inset && (method !== 'render' ? inset.replace(/ /g, SPACE).replace(/\\t/g, TAB) : inset)) || '';\n          lineFormat = `%c%s%c%s%c`;\n          values.push(\n            ...lines.flatMap((line, index) => [\n              `${INITIAL} /* border: 1px solid ${color}90; */ color: ${color};${(!index &&\n                ` --color: ${color}; --details: \"${details}\";`) ||\n                ''}`,\n              `${INITIAL} border: 1px solid ${color}90; background: ${color}EE; color: white; font-weight: 300;`,\n              inset || '\\u200D',\n              `${INITIAL} border: 1px solid ${color}90; color: ${color}90; background: ${color}11; font-weight: 500; text-shadow: 0 0 0 #999F;`,\n              line || '\\u200D',\n              INITIAL,\n            ]),\n          );\n        } else {\n          lines = string.slice(0, (delimiter && -delimiter.length) || undefined).split(/\\n|\\r\\n/g);\n          lineFormat = `%c%s%c`;\n          values.push(\n            ...lines.flatMap((line, index) => [\n              `${INITIAL} /* border: 1px solid ${color}90; */ color: ${color};${(!index &&\n                ` --color: ${color}; --details: \"${details}\";`) ||\n                ''}`,\n              `${INITIAL} border: 1px solid ${color}90; color: ${color}90; background: ${color}11; font-weight: 500; text-shadow: 0 0 0 #999F;`,\n              line || '\\u200D',\n              INITIAL,\n            ]),\n          );\n        }\n        // @ts-ignore\n        format += `%c${identity.padStart(\n          SEGMENT_MARGIN.length - 1,\n        )}\\u{00A0}${lineFormat}${`%c\\n${SEGMENT_MARGIN}${lineFormat}`.repeat(lines.length - 1)}`;\n\n        (delimiter =\n          (delimiter && (method !== 'render' ? delimiter.replace(/ /g, SPACE).replace(/\\t/g, TAB) : delimiter)) || ''),\n          values.push(\n            `${INITIAL} border: 1px solid ${color}90; background: ${color}EE; color: white; font-weight: 300;\"`,\n            delimiter || '\\u200D',\n            INITIAL,\n          ),\n          (format += `%c%s%c`);\n      }\n\n      logs.push([\n        method,\n        [\n          `${format}`.trimRight(),\n          ...values.splice(0, values.length),\n          //{string, identity, meta, capture, match}\n        ],\n      ]);\n\n      lastIndex = index + string.length;\n    }\n  } catch (exception) {\n    if (!warnings) throw (exception.stack, exception);\n    else logs.push(['warn', [exception]]);\n  }\n  timing && console.timeEnd(`printing${stamp}`);\n\n  // debugger;\n\n  return render[method === 'render' ? 'output' : 'console'](...logs);\n};\n\nconst SEGMENT_MARGIN = `\\u{00A0}`.repeat(10);\nconst RESET_STYLE = 'font-family: monospace; padding: 1px 0; margin: 1px 0; line-height: 1.75em;';\nconst SPACE = `\\u{2423}`;\nconst TAB = `\\u{2192}`;\nconst FORMATTING = /(.*?)(%c|%s|%d|%[\\d\\.]*f|%o|%O|$)/g;\n\nconst COLORS = (debugMatcher.colors = ['#CCCC00', '#00CCCC', '#CC00CC', '#FF6600', '#00FF66', '#6600FF']);\n\nCOLORS: {\n  // @ts-ignore\n  COLORS.empty = '#FF3333';\n  // @ts-ignore\n  COLORS.feed = '#3333FF';\n  // @ts-ignore\n  COLORS.sequence = '#33FF33';\n  // @ts-ignore\n  COLORS.unknown = '#FF00FF';\n}\n\nconst render = (format, ...values) => {\n  const spans = [];\n\n  FORMATTING.lastIndex = null;\n  if (typeof format === 'string' && FORMATTING.test(format)) {\n    FORMATTING.lastIndex = null;\n    let i = 0;\n    let span;\n    const push = text => (span ? span.push(text) : spans.push(text));\n    const roll = () => (span && spans.push(render.span(span.style, ...span)), (span = undefined));\n    // @ts-ignore\n    for (const [, pre, formatting = '%O'] of format.matchAll(FORMATTING)) {\n      const value = values[i++];\n      pre && push(render.pre(pre));\n      switch (formatting.slice(-1)) {\n        case 'c':\n          roll();\n          span = [];\n          // @ts-ignore\n          span.style = value;\n          break;\n        case 's':\n          push(render.string(value));\n          break;\n        default:\n          push(render.object(value));\n          break;\n      }\n    }\n  }\n\n  return `<pre>${spans.join('')}</pre>`;\n};\n\nrender: {\n  render.pre = value => `<span class=\"pre\">${value}</span>`;\n  render.string = value => `<span class=\"string\">${`${value}`.replace(/\\t/g, '<tt class=\"tab\">$&</tt>')}</span>`;\n  render.object = value => `<span class=\"object\">${JSON.stringify(value)}</span>`;\n  render.span = (style, ...content) => `<span class=\"span\" style='${style || ''}'>${content.join('\\u00A0')}</span>`;\n  render.output = (...logs) => logs.flatMap(render.output.entry);\n  render.output.entry = ([method, args]) => (method ? render(...args) : []);\n  render.console = (...logs) => void logs.map(render.console.entry);\n  render.console.entry = ([method, args]) => void (method in console && Reflect.apply(console[method], console, args));\n}\n\n/** @typedef {MatcherDebugOptions} Options */\n/** @typedef {MatcherDebugOptions.InternalDebugOptions} InternalOptions */\n/** @typedef {MatcherDebugOptions.ExternalOptions} ExternalOptions */\n"],"names":[],"mappings":"AAAC;AACD;AACA;AACA;AACY,MAAC,YAAY,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,GAAG,EAAE;AAC9D,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,OAAO;AAC7C,EAAE,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC;AACpF,EAAE;AACF;AACA;AACA,YAAY,CAAC,QAAQ,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,GAAG,EAAE,KAAK;AAC/D,EAAE,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC;AACnC,EAAE,MAAM,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,KAAK,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC;AAC3E,EAAE,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7C;AACA;AACA,EAAE,OAAO,CAAC,OAAO,GAAG;AACpB,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,UAAU,GAAG,UAAU,IAAI,OAAO,CAAC,OAAO,GAAG,OAAO,EAAE;AACtG,GAAG,CAAC;AACJ,EAAE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD,EAAE,OAAO,OAAO,CAAC,OAAO,CAAC;AACzB,CAAC,CAAC;AACF;AACA;AACA,YAAY,CAAC,OAAO,GAAG,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,KAAK;AAClD,EAAE,MAAM;AACR,IAAI,MAAM,GAAG,KAAK;AAClB,IAAI,MAAM,GAAG,KAAK;AAClB,IAAI,QAAQ,GAAG,IAAI;AACnB,IAAI,OAAO;AACX;AACA,IAAI,MAAM,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM;AAC/D,IAAI,IAAI,GAAG,EAAE;AACb;AACA,IAAI,WAAW,GAAG,OAAO;AACzB;AACA,MAAM,OAAO,CAAC,QAAQ,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;AACrG,GAAG,GAAG,OAAO,CAAC;AACd,EAAE,MAAM,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,KAAK,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC;AAC3E;AACA,EAAE,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7C;AACA,EAAE,MAAM,OAAO,GAAG,MAAM,KAAK,QAAQ,GAAG,EAAE,GAAG,WAAW,CAAC;AACzD;AACA,EAAE,MAAM,CAAC,SAAS,GAAG,YAAY,EAAE,OAAO,GAAG,UAAU,EAAE,KAAK,GAAG,QAAQ,CAAC,qBAAqB,OAAO,CAAC,CAAC;AACxG;AACA,EAAE,IAAI;AACN,IAAI,IAAI,MAAM,CAAC;AACf,IAAI,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;AACvB,IAAI,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE;AACjC,MAAM,IAAI,CAAC,KAAK,EAAE,SAAS;AAC3B,MAAM,MAAM,GAAG,EAAE,CAAC;AAClB,MAAM,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC,GAAG,KAAK,CAAC;AAC9F;AACA,MAAM,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,EAAE,CAAC,OAAO,GAAG,OAAO,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC;AACjF,MAAM,MAAM,MAAM,GAAG,EAAE,CAAC;AACxB;AACA,MAAM,MAAM,KAAK,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,KAAK,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;AACpF;AACA,MAAM,MAAM,OAAO,IAAI,UAAU,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC;AACzD,QAAQ,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC3F;AACA,MAAM,MAAM,GAAG,EAAE,CAAC;AAClB;AACA,MAAM,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1C,QAAQ,MAAM,CAAC,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC;AAC3C,QAAQ,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM;AAClC,UAAU,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;AACjC,aAAa,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;AAC9B,aAAa,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC;AACrC,aAAa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzB,SAAS,CAAC;AACV,QAAQ,MAAM,CAAC,IAAI;AACnB;AACA,UAAU,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;AAC5F,YAAY,CAAC,EAAE,OAAO,CAAC,cAAc,CAAC;AACtC,YAAY,KAAK,GAAG,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;AACtG,YAAY,CAAC,EAAE,OAAO,CAAC,6HAA6H,EAAE,OAAO,CAAC,EAAE,CAAC;AACjK,YAAY,IAAI;AAChB,WAAW,CAAC;AACZ,UAAU,OAAO;AACjB,SAAS;AACT;AACA,WAAW,MAAM,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACvE;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,QAAQ,MAAM,GAAG,EAAE,CAAC;AACpB,OAAO;AACP;AACA;AACA,MAAM,OAAO,KAAK,SAAS,KAAK,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;AAC9D;AACA,MAAM,SAAS,KAAK,SAAS,KAAK,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;AACpE;AACA;AACA,MAAM,MAAM,OAAO,IAAI,UAAU,CAAC,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;AAC7F,MAAM,OAAO,IAAI,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G;AACA,MAAM,MAAM,KAAK,GAAG,CAAC,QAAQ;AAC7B;AACA;AACA,UAAU,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO;AAC1C,UAAU,QAAQ,IAAI,MAAM;AAC5B,UAAU,MAAM,CAAC,QAAQ,CAAC;AAC1B,UAAU,MAAM,CAAC,CAAC,CAAC,WAAW,IAAI,QAAQ,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9G;AACA,MAAM,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM;AAChC,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AACtD,WAAW,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC;AAC/C;AACA,WAAW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvB,OAAO,CAAC;AACR;AACA,MAAM;AACN,QAAQ,IAAI,KAAK,EAAE,UAAU,CAAC;AAC9B,QAAQ,IAAI,KAAK,EAAE;AACnB,UAAU,MAAM,KAAK,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;AACrD,UAAU,MAAM,GAAG,GAAG,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC;AACpE,UAAU,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACrE,UAAU,KAAK,GAAG,CAAC,KAAK,KAAK,MAAM,KAAK,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AAClH,UAAU,UAAU,GAAG,CAAC,UAAU,CAAC,CAAC;AACpC,UAAU,MAAM,CAAC,IAAI;AACrB,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;AAC9C,cAAc,CAAC,EAAE,OAAO,CAAC,sBAAsB,EAAE,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK;AACvF,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,EAAE,OAAO,CAAC,EAAE,CAAC;AAC9D,gBAAgB,EAAE,CAAC,CAAC;AACpB,cAAc,CAAC,EAAE,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,mCAAmC,CAAC;AAChH,cAAc,KAAK,IAAI,QAAQ;AAC/B,cAAc,CAAC,EAAE,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,+CAA+C,CAAC;AAC/I,cAAc,IAAI,IAAI,QAAQ;AAC9B,cAAc,OAAO;AACrB,aAAa,CAAC;AACd,WAAW,CAAC;AACZ,SAAS,MAAM;AACf,UAAU,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACnG,UAAU,UAAU,GAAG,CAAC,MAAM,CAAC,CAAC;AAChC,UAAU,MAAM,CAAC,IAAI;AACrB,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;AAC9C,cAAc,CAAC,EAAE,OAAO,CAAC,sBAAsB,EAAE,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK;AACvF,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,EAAE,OAAO,CAAC,EAAE,CAAC;AAC9D,gBAAgB,EAAE,CAAC,CAAC;AACpB,cAAc,CAAC,EAAE,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,+CAA+C,CAAC;AAC/I,cAAc,IAAI,IAAI,QAAQ;AAC9B,cAAc,OAAO;AACrB,aAAa,CAAC;AACd,WAAW,CAAC;AACZ,SAAS;AACT;AACA,QAAQ,MAAM,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ;AACxC,UAAU,cAAc,CAAC,MAAM,GAAG,CAAC;AACnC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG;AACA,QAAQ,CAAC,SAAS;AAClB,UAAU,CAAC,SAAS,KAAK,MAAM,KAAK,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE;AACrH,UAAU,MAAM,CAAC,IAAI;AACrB,YAAY,CAAC,EAAE,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,oCAAoC,CAAC;AAC/G,YAAY,SAAS,IAAI,QAAQ;AACjC,YAAY,OAAO;AACnB,WAAW;AACX,WAAW,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/B,OAAO;AACP;AACA,MAAM,IAAI,CAAC,IAAI,CAAC;AAChB,QAAQ,MAAM;AACd,QAAQ;AACR,UAAU,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,EAAE;AACjC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC;AAC5C;AACA,SAAS;AACT,OAAO,CAAC,CAAC;AACT;AACA,MAAM,SAAS,GAAG,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;AACxC,KAAK;AACL,GAAG,CAAC,OAAO,SAAS,EAAE;AACtB,IAAI,IAAI,CAAC,QAAQ,EAAE,OAAO,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE;AACtD,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC1C,GAAG;AACH,EAAE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD;AACA;AACA;AACA,EAAE,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,GAAG,QAAQ,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AACrE,CAAC,CAAC;AACF;AACA,MAAM,cAAc,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,6EAA6E,CAAC;AAClG,MAAM,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC;AACzB,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;AACvB,MAAM,UAAU,GAAG,oCAAoC,CAAC;AACxD;AACA,MAAM,MAAM,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAC1G;AACO,CAAC;AACR;AACA,EAAE,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;AAC3B;AACA,EAAE,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC;AAC1B;AACA,EAAE,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC9B;AACA,EAAE,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;AAC7B,CAAC;AACD;AACA,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,GAAG,MAAM,KAAK;AACtC,EAAE,MAAM,KAAK,GAAG,EAAE,CAAC;AACnB;AACA,EAAE,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,EAAE,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AAC7D,IAAI,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;AAChC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,IAAI,IAAI,IAAI,CAAC;AACb,IAAI,MAAM,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACrE,IAAI,MAAM,IAAI,GAAG,OAAO,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC;AAClG;AACA,IAAI,KAAK,MAAM,GAAG,GAAG,EAAE,UAAU,GAAG,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC1E,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAChC,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC,MAAM,QAAQ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,QAAQ,KAAK,GAAG;AAChB,UAAU,IAAI,EAAE,CAAC;AACjB,UAAU,IAAI,GAAG,EAAE,CAAC;AACpB;AACA,UAAU,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC7B,UAAU,MAAM;AAChB,QAAQ,KAAK,GAAG;AAChB,UAAU,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACrC,UAAU,MAAM;AAChB,QAAQ;AACR,UAAU,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACrC,UAAU,MAAM;AAChB,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AACxC,CAAC,CAAC;AACF;AACO,CAAC;AACR,EAAE,MAAM,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AAC5D,EAAE,MAAM,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,qBAAqB,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,yBAAyB,CAAC,CAAC,OAAO,CAAC,CAAC;AACjH,EAAE,MAAM,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;AAClF,EAAE,MAAM,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,OAAO,KAAK,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;AACpH,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACjE,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5E,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACpE,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,MAAM,MAAM,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AACvH,CAAC;AACD;AACA;AACA;AACA;;;;"}